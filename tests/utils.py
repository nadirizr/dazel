import dazel


def create_instance(
        instance_name=dazel.DEFAULT_INSTANCE_NAME,
        image_name=dazel.DEFAULT_IMAGE_NAME,
        run_command=dazel.DEFAULT_RUN_COMMAND,
        docker_command=dazel.DEFAULT_DOCKER_COMMAND,
        dockerfile=dazel.DEFAULT_LOCAL_DOCKERFILE,
        repository=dazel.DEFAULT_REMOTE_REPOSITORY,
        directory=dazel.DEFAULT_DIRECTORY,
        command=dazel.DEFAULT_COMMAND,
        volumes=dazel.DEFAULT_VOLUMES,
        ports=dazel.DEFAULT_PORTS,
        env_vars=dazel.DEFAULT_ENV_VARS,
        network=dazel.DEFAULT_NETWORK,
        run_deps=dazel.DEFAULT_RUN_DEPS,
        docker_compose_file=dazel.DEFAULT_DOCKER_COMPOSE_FILE,
        docker_compose_command=dazel.DEFAULT_DOCKER_COMPOSE_COMMAND,
        docker_compose_project_name=dazel.DEFAULT_DOCKER_COMPOSE_PROJECT_NAME,
        docker_compose_services=dazel.DEFAULT_DOCKER_COMPOSE_SERVICES,
        bazel_rc_file=dazel.DEFAULT_BAZEL_RC_FILE,
        bazel_user_output_root=dazel.DEFAULT_BAZEL_USER_OUTPUT_ROOT,
        docker_run_privileged=dazel.DEFAULT_DOCKER_RUN_PRIVILEGED,
        docker_machine=dazel.DEFAULT_DOCKER_MACHINE,
        dazel_run_file=dazel.DAZEL_RUN_FILE,
        workspace_hex=dazel.DEFAULT_WORKSPACE_HEX,
        delegated_volume=dazel.DEFAULT_DELEGATED_VOLUME,
        user=dazel.DEFAULT_USER,
):
    return dazel.DockerInstance(
        instance_name=instance_name,
        image_name=image_name,
        run_command=run_command,
        docker_command=docker_command,
        dockerfile=dockerfile,
        repository=repository,
        directory=directory,
        command=command,
        volumes=volumes,
        ports=ports,
        env_vars=env_vars,
        network=network,
        run_deps=run_deps,
        docker_compose_file=docker_compose_file,
        docker_compose_command=docker_compose_command,
        docker_compose_project_name=docker_compose_project_name,
        docker_compose_services=docker_compose_services,
        bazel_rc_file=bazel_rc_file,
        bazel_user_output_root=bazel_user_output_root,
        docker_run_privileged=docker_run_privileged,
        docker_machine=docker_machine,
        dazel_run_file=dazel_run_file,
        workspace_hex=workspace_hex,
        delegated_volume=delegated_volume,
        user=user, )
